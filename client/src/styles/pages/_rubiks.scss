$background: #fefefe;
$text: #4b507a;
$cyan: #60daaa;
$yellow: #fbca67;
$orange: #ff8a30;
$purple: #6477b9;
$blue: #0eb7da;
$grey: rgb(161, 161, 161);
$light-grey: #F5F5F5;
$white: #ffffff;

body {
  margin: 0px;
  padding: 0px;
}

.canvas {
  width: 70vw;
}

.direction-image {
  display: flex;
  min-height: 80px;
  align-items: center;
  justify-content: center;
  border: 2px solid $grey;
  margin-bottom: 1rem;
  margin-top: 1rem;
  background: $light-grey;
}

.side-nav {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  height: 100vh;
  width: 30vw;
  margin-top: -0.5rem;
}

.side-nav-element {
  width: 80%;
  padding: 1rem;
  border-left: 2px solid $grey;
  margin: 1rem;
  margin-left: 1rem;
}

.corda-side-nav-element {
  margin: 1rem;
  margin-left: 1.5rem;
}

.move-queue-visualizer {
  margin-top: 0.5rem;
  margin-bottom: 0.5rem;
  max-width: 80%;
}

.move-queue-visualizer-queue {
  max-width: 90%;
  overflow: scroll;
}

.corda-side-nav-title {
  margin: 1rem;
  margin-left: 1.5rem;
}

.flex-container {
  display: flex;
  justify-content: center;
  align-items: center;

  &.spread {
    justify-content: space-between;
  }
}

.button-category {
  margin-top: 10px;
  margin-bottom: 10px;
}

.button-settings {
  max-height: 3vh;
  margin: 0.5rem;
  align-self: right;
}

// Basic styles
button, .answer, .answer-selected {
  background: none;
  border: 0;
  box-sizing: border-box;
  padding: 0.5em 1em;
  
  // Using inset box-shadow instead of border for sizing simplicity
  box-shadow: inset 0 0 0 2px $grey;
  color: $grey;
  font-size: 1em;
  font-weight: 700;

  // Required, since we're setting absolute on pseudo-elements
  position: relative;
  vertical-align: middle;

  &::before,
  &::after {
    box-sizing: inherit;
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
  }
}

button.draw, .answer.draw {
  margin: 0.5em;
}

.draw {
    transition: color 0.25s;

  &::before,
  &::after {
    // Set border to invisible, so we don't see a 4px border on a 0x0 element before the transition starts
    border: 2px solid transparent;
    width: 0;
    height: 0;
  }

  // This covers the top & right borders (expands right, then down)
  &::before {
    top: 0;
    left: 0;
  }

  // And this the bottom & left borders (expands left, then up)
  &::after {
    bottom: 0;
    right: 0;
  }
  
  &:hover {
    color: $primary-light;
  }

  // Hover styles
  &:hover::before,
  &:hover::after {
    width: 100%;
    height: 100%;
  }

  &:hover::before {
    border-top-color: $primary-light; // Make borders visible
    border-right-color: $primary-light;
    transition:
      width 0.25s ease-out, // Width expands first
      height 0.25s ease-out 0.25s; // And then height
  }

  &:hover::after {
    border-bottom-color: $primary-light; // Make borders visible
    border-left-color: $primary-light;
    transition:
      border-color 0s ease-out 0.5s, // Wait for ::before to finish before showing border
      width 0.25s ease-out 0.5s, // And then exanding width
      height 0.25s ease-out 0.75s; // And finally height
  }
}
//tiny change
// Inherits from .draw
.meet {
  
  &:hover {
    color: $primary;
  }

  // Start ::after in same position as ::before
  &::after {
    top: 0;
    left: 0;
  }

  // Change colors
  &:hover::before {
    border-top-color: $primary;
    border-right-color: $primary;
  }

  &:hover::after {
    border-bottom-color: $primary;
    border-left-color: $primary;
    transition: // Animate height first, then width
      height 0.25s ease-out,
      width 0.25s ease-out 0.25s;
  }

}

@media only screen 
  and (min-device-width: 375px)
  and (max-device-width: 812px)
  and (-webkit-min-device-pixel-ratio: 3) { 
    button, .answer, .answer-selected {
      font-size: 2.6rem;
      width: 90%;
    }
}

.cube-tile-container {
  overflow: scroll;
  max-height: 80%;
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}

.corda-cube-tile {
  max-height: 60%;
  width: 30%;
  margin: 0.1rem;
  padding: 0.5rem;
  border: 2px solid #a1a1a1;
}

.fit {
  max-width: 100%;
}

.selected-cube {
  border-color: #ec1d24;
}